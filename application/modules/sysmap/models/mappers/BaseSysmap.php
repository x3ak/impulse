<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Sysmap_Model_Mapper_BaseSysmap', 'doctrine');

/**
 * Sysmap_Model_Mapper_BaseSysmap
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $mca
 * @property string $hash
 * @property string $form_name
 * @property string $title
 * @property string $description
 * @property timestamp $index_date
 * @property string $path
 * @property array $params
 * @property boolean $is_pattern
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Sysmap_Model_Mapper_BaseSysmap extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('sysmap_items');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '11',
             ));
        $this->hasColumn('mca', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'length' => '255',
             ));
        $this->hasColumn('hash', 'string', 35, array(
             'type' => 'string',
             'length' => '35',
             ));
        $this->hasColumn('form_name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('title', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('description', 'string', 1000, array(
             'type' => 'string',
             'length' => '1000',
             ));
        $this->hasColumn('index_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('path', 'string', 1000, array(
             'type' => 'string',
             'length' => '1000',
             ));
        $this->hasColumn('params', 'array', null, array(
             'type' => 'array',
             ));
        $this->hasColumn('is_pattern', 'boolean', null, array(
             'type' => 'boolean',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $nestedset0 = new Doctrine_Template_NestedSet();
        $this->actAs($nestedset0);
    }
}